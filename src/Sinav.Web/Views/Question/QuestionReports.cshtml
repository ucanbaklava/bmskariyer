@using Sinav.Web.Helpers
@{ Layout = "_Layout";}

@section styles
{
  <link rel="stylesheet" href="~/assets/libs/datatables/datatables.css" />
  <link rel="stylesheet" href="~/assets/libs/sweetalert2/sweetalert2.css"/>
  <link rel="stylesheet" href="~/assets/libs/bootstrap-markdown/bootstrap-markdown.css" />
  <link rel="stylesheet" href="~/assets/css/toastr.min.css" />

}

<h4 class="d-flex justify-content-between align-items-center w-100 font-weight-bold py-3 mb-4">
  <div>Raporlanan Sorular</div>

</h4>

<form id="image-form">
<input id="file-input" type="file" name="file" style="display: none;" />

</form>

<!-- Filters -->
<div class="ui-bordered px-4 pt-4 mb-4">
  <div class="form-row">
    <div class="col-md mb-4">
      <label class="form-label">Priority</label>
      <select class="custom-select">
        <option>Any</option>
        <option>High</option>
        <option>Medium</option>
        <option>Low</option>
      </select>
    </div>
    <div class="col-md mb-4">
      <label class="form-label">Status</label>
      <select class="custom-select">
        <option>Any</option>
        <option>Open</option>
        <option>Reopened</option>
        <option>In progress</option>
        <option>Closed</option>
      </select>
    </div>
    <div class="col-md mb-4">
      <label class="form-label">Created date</label>
      <input type="text" id="tickets-list-created" class="form-control">
    </div>
    <div class="col-md col-xl-2 mb-4">
      <label class="form-label d-none d-md-block">&nbsp;</label>
      <button type="button" class="btn btn-secondary btn-block">Show</button>
    </div>
  </div>
</div>
<!-- / Filters -->

<div class="card">
  <div class="card-datatable table-responsive">
    <div class="card-datatable table-responsive">
      <table id="report-list" class="table table-striped table-bordered">

      </table>
    </div>
  </div>
</div>


<!-- EDIT QUESTION MODAL -->

<!-- ADD QUESTION MODAL -->
<div id="question-modal" class="modal fade" tabindex="-1" role="dialog"  aria-hidden="true">
  <form id="update-question-form" method="post" enctype="multipart/form-data">

    <input type="hidden" name="subTopicId" id="subtopic-id">
    <input type="hidden" name="questionId" id="question-id">

    <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLiveLabel">Raporlanan Soru</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">×</span>
        </button>
      </div>
      <div class="modal-body">
        <div style="width: 500px;margin: 0 auto;">
          @Html.Raw(SubjectTreeHelper.TreeviewHelper(ViewBag.Subjects))
          
        </div>
        <div class="form-group">
          <textarea id="bs-markdown"  data-provide="markdown" rows="10"></textarea>
          <input type="text" id="content" hidden name="content"/>
        </div>
        <div class="form-group">
          <label class="form-label">Cevap 1</label>
          <input type="text" class="form-control mb-1" name="a1">
        </div>
        <div class="form-group">
          <label class="form-label">Cevap 2</label>
          <input type="text" class="form-control mb-1" name="a2">
        </div>
        <div class="form-group">
          <label class="form-label">Cevap 3</label>
          <input type="text" class="form-control mb-1" name="a3">
        </div>
        <div class="form-group">
          <label class="form-label">Cevap 4</label>
          <input type="text" class="form-control mb-1" name="a4">
        </div>
        <div class="form-group">
          <label class="form-label">Cevap 5</label>
          <input type="text" class="form-control mb-1" name="a5">
        </div>
        <div class="custom-controls-stacked">
          <label class="custom-control custom-radio">
            <input name="answer" type="radio" class="custom-control-input" value="a1">
            <span class="custom-control-label">Cevap 1</span>
          </label>
          <label class="custom-control custom-radio">
            <input name="answer" type="radio" class="custom-control-input" value="a2">
            <span class="custom-control-label">Cevap 2</span>
          </label>
          <label class="custom-control custom-radio">
            <input name="answer" type="radio" class="custom-control-input" value="a3">
            <span class="custom-control-label">Cevap 3</span>
          </label>
          <label class="custom-control custom-radio">
            <input name="answer" type="radio" class="custom-control-input" value="a4">
            <span class="custom-control-label">Cevap 4</span>
          </label>
          <label class="custom-control custom-radio">
            <input name="answer" type="radio" class="custom-control-input" value="a5">
            <span class="custom-control-label">Cevap 5</span>
          </label>

        </div>
          
        <div style="display: inline-block; width: 500px;" class="explanation">
          <div class="form-group">
            <textarea id="bs-markdown-explanation"  data-provide="markdown" rows="10"></textarea>     
                      <input type="text" id="explanation" hidden name="explanation"/>

            </div>                   
        </div>
        <div style="display: inline-block; width: 500px;" >
          <div class="form-group">
            <label class="form-check">
              <input class="form-check-input" type="checkbox" name="cikmissoru">
              <div class="form-check-label">
                Çıkmış Soru
              </div>
            </label>
          </div>

        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
          <button type="submit" class="btn btn-primary" id="submit-question-form">Onayla</button>
        </div>
      </div>
    </div>
    </div>
  </form>
</div>
<!-- ADD QUESTION MODAL END -->
<!-- EDIT QUESTION MODAL END -->



@section scripts
{
  <script src="~/assets/libs/datatables/datatables.js"></script>
  <script src="~/assets/libs/sweetalert2/sweetalert2.js"></script>
  <script src="~/assets/libs/bootstrap-markdown/bootstrap-markdown.js"></script>
  <script src="https://unpkg.com/showdown/dist/showdown.min.js"></script>
  <script src="~/assets/js/toastr.min.js"></script>

  <script>

var converter = new showdown.Converter();
var convertFunction = converter.makeHtml.bind(converter);


   function editQuestion(id){
       $('#question-modal').modal();

       $.ajax({
           url: '/question/GetQuestiondById?id=' + id,
           type: 'POST',
           success: function (data) {
               var a = data.options.filter(x => x.isCorrect === true);
               console.log(a);
               document.getElementsByName("a1")[0].value = data.options[0].text;
               document.getElementsByName("a2")[0].value = data.options[1].text;
               document.getElementsByName("a3")[0].value = data.options[2].text;
               document.getElementsByName("a4")[0].value = data.options[3].text;
               document.getElementsByName("a5")[0].value = data.options[4].text;
               
               document.getElementById("subtopic-id").value = data.subTopicId;
               document.getElementById("question-id").value = data.questionId;
               
               $('input[name="answer"]').each(function(index){
                   this.setAttribute("data-answer", data.options[index].text);
               });
   
               $('#content').val($('#bs-markdown').data('markdown').setContent(converter.makeMarkdown(data.questionContent)));
               if(data.explanation != null)  $('#explanation').val($('#bs-markdown-explanation').data('markdown').setContent(converter.makeMarkdown(data.explanation)));

               $('input[name="subtopicId"]').each(function(){
                    if(this.value == data.subTopicId)
                    {
                       $(this).prop('checked',true)
                    }
               });
               
               let answer = data.options.filter(function (e) {
                   return e.isCorrect === true;
               });
               
               $('input[name="answer"]').each(function(index){
                   if (this.getAttribute("data-answer") == answer[0].text) $(this).prop('checked',true)
               });
               
               if (data.cikmisSoru === true){
                 $('#cikmissoru-edit').attr('checked', 'checked');
               }
   
   
           },
           cache: false,
           contentType: false,
           processData: false
       });
   }
   
     $("#update-question-form").submit(function(e) {
         e.preventDefault();    
          $('#content').val($('#bs-markdown').data('markdown').parseContent());
          $('#explanation').val($('#bs-markdown-explanation').data('markdown').parseContent());
        document.getElementById("subtopic-id").value =   $("input[name='subtopicId']:checked:checked").val()

          let submitButton = document.getElementById('submit-question-form');
          submitButton.disabled = true;
          submitButton.innerHTML += `<span class="spinner-border ml-1" role="status" aria-hidden="true"></span>`;
         let formData = new FormData(this);
         console.log(formData);
         $.ajax({
             url: '/question/updatequestion',
             type: 'POST',
             data: formData,
              success: function (data) {
                  $('#subtopic-list').DataTable().ajax.reload();
                  toastr.success("Soru Düzenlendi", "Düzenleme Başarılı", {
                    positionClass:     "toast-top-right",
                    closeButton:       true,
                    progressBar:       true,
                    preventDuplicates: true,
                    newestOnTop:       true
                  });
                  submitButton.disabled = false;
                  $(submitButton).children(0).remove()
              },
              error: function (data){
                  $('#subtopic-list').DataTable().ajax.reload();
                  toastr.error("Soru Düzenlenemedi. Daha Sonra Tekrar Deneyin", "HATA", {
                    positionClass:     "toast-top-right",
                    closeButton:       true,
                    progressBar:       true,
                    preventDuplicates: true,
                    newestOnTop:       true
                  });
                  submitButton.disabled = false;
                  $(submitButton).children(0).remove()
              },
             cache: false,
             contentType: false,
             processData: false
         });
     });
   



  
  function deleteSubTopic(subTopicId, name){
      Swal.fire({
        title: name + ' konusunu silmek istediğine emin misin?',
        text: "Silmeden önce iki kere düşün!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        cancelButtonText: "İptal",
        confirmButtonText: 'Eminim, Son Kararım'
      }).then((result) => {
        if (result.value) {
          $.ajax({
            url: '/subtopic/deleteSubTopic?subTopicId=' + subTopicId,
            type: 'post',
            success: function(data) {
              $('#subtopic-list').DataTable().ajax.reload();
              Swal.fire(
                'Silindi!',
                'Silindi',
                'success'
              )
            },
            error: function(data) {
                Swal.fire(
                  'Hata!',
                  'Konu Silinemedi',
                  'error'
                )           
            }
          })

        }
      })
  }
    


$('#report-list').dataTable({
  pageLength: 25,
  lengthMenu: [[2, 5,10, 25, 50, -1], [2, 5, 10, 25, 50, "Tümü"]],
  processing: true,
  serverSide: true,
  ordering: true,
  paging: true,
  pagingType: "full_numbers",
  rowId: 'id',

  language: {
    "search": "Ara:",
    "info": "Toplam _TOTAL_ kayıttan  _END_  kayıt gösteriliyor",
    "paginate": {
      "first": "İlk",
      "last": "Son",
      "previous": "Önceki",
      "next": "Sonraki"
    },
    "aria": {
      "sortAscending":  ": activate to sort column ascending",
      "sortDescending": ": activate to sort column descending"
    }
  },
  columns: [
    { data: 'id', title:"Id", width: '10%' },
   
    {data: 'userName', title:"Gönderen", width:'20%', render: function ( data, type, row ) {
      return ` <img src="${row.avatar}"  width="60px;" /> <a href="javascript:void(0)" class="btn btn-default  md-btn-flat ml-3" >${row.userName}</a>
               ${row.anonym ? '<a href="javascript:void(0)" class="badge badge-dark ml-3">Anonim</a>' : '' }`
    }},   
     { data: "feedback", title:"İçerik", width: '25%'},
    { data: "subject", title:"Ana Konu", width: '20%'},
    { data: "subTopic", title:"Alt Konu", width: '20%'},


    {data: null, title:"İşlem", render: function ( data, type, row ) {
      return ` <a href="javascript:void(0);" onclick="editQuestion(${row.questionId})"><i class="fas fa-edit"></i></a>`}
               
    }

  ],
  "ajax":{
    type: "POST",
    url: '/question/GetQuestionReports',
  },

});

$('#bs-markdown-explanation').markdown({
  parser: convertFunction, // or whatever,
  iconlibrary: 'fa',
additionalButtons: [
  [{
        name: "groupCustom",
        data: [{
          name: "underline",
          toggle: true, // this param only take effect if you load bootstrap.js
          title: "Altı Çizili",
          icon: "fas fa-underline",
          callback: function(e){
            let selected = e.getSelection();
            e.replaceSelection("<u>" + selected.text + "</ul>");
            e = null;

          }
        },
        {
          name: "center",
          icon: "fas fa-align-center",
          toggle: true,
          title: "Ortala",
            callback: function(e){
              let selected = e.getSelection();
              e.replaceSelection("<center>" + selected.text + "</center>");
              e = null;

            }
        },
        {
          name: "link",
          icon: "fas fa-link",
          toggle: true,
          title: "Link",
            callback: function(e){
               var url = prompt("Please enter your name");
              let selected = e.getSelection();
              e.replaceSelection("[" + selected.text + "](" + url + ")");
              e = null;

            }
        },
        {
          name: "imageupload",
          icon: "fas fa-images",
          toggle: true,
          title: "Resim Yükle",
            callback: function(e){
              $('#file-input').trigger('click');
              $('#file-input').on('input', function() {
                  var formData = new FormData(document.getElementById('image-form'));

                  $.ajax({
                    url: "/upload",
                    data: formData,
                    type: "POST",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                      console.log(data);
                        //let selected = e.getSelection();
                        e.replaceSelection("![]( " + data+ " =800x*)");
                       // e.replaceSelection(`<img src="${data}" style="width:650px; height;800px;"`)

                        e = null;
                    },
                    error: function(data) {
                      console.log(data);
                    }
                  })
              });
              let selected = e.getSelection();
            }
        },
        {
          name: "fileupload",
          icon: "fas fa-book",
          toggle: true,
          title: "Döküman Ekle",
            callback: function(e){
              $('#file-input').trigger('click');
              $('#file-input').on('input', function() {
                  var formData = new FormData(document.getElementById('image-form'));

                  $.ajax({
                    url: "/upload",
                    data: formData,
                    type: "POST",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                      console.log(data);
                        //let selected = e.getSelection();
                        e.replaceSelection(`  <iframe src="https://docs.google.com/viewer?url=https://bmskariyer.com${data}&embedded=true"  style="width:600px;height: 800px"></iframe>`);
                        e = null;

                        },
                    error: function(data) {
                      console.log(data);
                    }
                  })
              });
              let selected = e.getSelection();
            }
        },
        {
            name: "youtube",
            icon: "fab fa-youtube-square",
            toggle: true,
            title: "Youtube",
                callback: function(e){
                  let selected = e.getSelection();
                  e.replaceSelection(`<iframe width="560" height="315" src="${selected.text.replace('watch?v=', 'embed/')}" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>`);
                  e = null;

                }
        },
        {
            name: "drive",
            icon: "fab fa-google-drive",
            toggle: true,
            title: "Drive",
                callback: function(e){
                  let selected = e.getSelection();
                  e.replaceSelection(`<iframe src="${selected.text.replace('/view?usp=sharing', '/preview')}" width="640" height="480"></iframe>`);
                }
        }

        ]
  }]
]
});    
$('#bs-markdown').markdown({
  parser: convertFunction, // or whatever,
  iconlibrary: 'fa',
additionalButtons: [
  [{
        name: "groupCustom",
        data: [{
          name: "underline",
          toggle: true, // this param only take effect if you load bootstrap.js
          title: "Altı Çizili",
          icon: "fas fa-underline",
          callback: function(e){
            let selected = e.getSelection();
            e.replaceSelection("<u>" + selected.text + "</ul>");
          }
        },
        {
          name: "center",
          icon: "fas fa-align-center",
          toggle: true,
          title: "Ortala",
            callback: function(e){
              let selected = e.getSelection();
              e.replaceSelection("<center>" + selected.text + "</center>");
            }
        },
        {
          name: "link",
          icon: "fas fa-link",
          toggle: true,
          title: "Link",
            callback: function(e){
               var url = prompt("Please enter your name");
              let selected = e.getSelection();
              e.replaceSelection("[" + selected.text + "](" + url + ")");
            }
        },
        {
          name: "imageupload",
          icon: "fas fa-images",
          toggle: true,
          title: "Resim Yükle",
            callback: function(e){
              $('#file-input').trigger('click');
              $('#file-input').on('input', function() {
                  var formData = new FormData(document.getElementById('image-form'));

                  $.ajax({
                    url: "/upload",
                    data: formData,
                    type: "POST",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                      console.log(data);
                        //let selected = e.getSelection();
                        e.replaceSelection(`![](${data} =200x100)`);
                        //e.replaceSelection(`<img src="${data}" style="width:650px; height;800px;" />`)

                        e = null;
                    },
                    error: function(data) {
                      console.log(data);
                    }
                  })
              });
              let selected = e.getSelection();
            }
        },
        {
          name: "fileupload",
          icon: "fas fa-book",
          toggle: true,
          title: "Döküman Ekle",
            callback: function(e){
              $('#file-input').trigger('click');
              $('#file-input').on('input', function() {
                  var formData = new FormData(document.getElementById('image-form'));

                  $.ajax({
                    url: "/upload",
                    data: formData,
                    type: "POST",
                    processData: false,
                    contentType: false,
                    success: function(data) {
                      console.log(data);
                        //let selected = e.getSelection();
                        e.replaceSelection(`  <iframe src="https://docs.google.com/viewer?url=https://bmskariyer.com${data}&embedded=true"  style="width:600px;height: 800px"></iframe>`);
                        e = null;

                    },
                    error: function(data) {
                      console.log(data);
                    }
                  })
              });
              let selected = e.getSelection();
            }
        },
        {
            name: "youtube",
            icon: "fab fa-youtube-square",
            toggle: true,
            title: "Youtube",
                callback: function(e){
                  let selected = e.getSelection();
                  e.replaceSelection(`<iframe width="560" height="315" src="${selected.text.replace('watch?v=', 'embed/')}" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>`);
                   e = null;
                }
        },
        {
            name: "drive",
            icon: "fab fa-google-drive",
            toggle: true,
            title: "Drive",
                callback: function(e){
                  let selected = e.getSelection();
                  e.replaceSelection(`<iframe src="${selected.text.replace('/view?usp=sharing', '/preview')}" width="640" height="480"></iframe>`);
                  e = null;
                }
        }

        ]
  }]
]
});
</script>

}